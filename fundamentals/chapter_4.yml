---
header:
  author: Justin Phelps
  title: Example Commands and State Files
  description: Example commands and state files for various tasks.

slides:

   - set_global:
       transition: rotate
       background: '#007777'
       #background: 'black'

   -
     - nested:
         -
           - h1: Example Commands and State Files
           - ul: 
             - State and Execution Modules
             - test.ping
             - command
             - pkg and service
             - Lab: Find a module in the documentation.
         -
           - h2: State and Execution Modules
           - p: 'State modules are used when calling state.sls or highstate against a minion.'
           - code: |
               fred:
                 user.present:
                   - fullname: Fred Jones
                   - shell: /bin/zsh
                   - home: /home/fred
                   - uid: 4000
                   - gid: 4000
                   - groups:
                     - wheel
                     - storage
                     - games
         -
           - h2: State and Execution Modules
           - p: 'Execution modules are used when calling modules directly from the command line.'
           - code: |
               salt '*' user.add fred <uid> <gid> <groups> <home> <shell>
         -
           - h2: Fast
           - p: Ansible is easy to learn.
           - p: Setup is fast.
           - class_notes: |
               1. You can automate in under 30 minutes. Forget about how it works, just do it.
               2. No agents. SSH keys are typically already in place.
         -
           - h2: Complete
           - p: 'Ansible is several tools in one:'
           - ul:
             - configuration management
             - application deployment
             - orchestration
             - provisioning
           - p: Hundreds of built-in modules.
         -
           - h2: Efficient
           - p: Ansible doesn't require a custom agent or software to install. 
           - p: Ansible runs on OpenSSH. 
           - class_notes: |
               1. With no additional software infrastructure, you don't have to
               worry about managing the management tool.
               2. That means anywhere SSH goes, Ansible goes.
               3. It doesn't suck memory or CPU resources when it is not in use.
               4. Designed from day one to automate no-downtime rolling updates
               and multi-tier orchestration.
         -
           - h2: Secure
           - p: No agent. 
           - p: SSH transport.
           - p: Ansible plays can be read by anyone. 
           - class_notes: |
               1. It doesn't need additional ports or root level daemons.
               2. It uses built-in OS authentication for better security - login
               as who you are, sudo if you want to sudo.
               3. You can work with tools like Kerberos, LDAP, and sssd.
               4. OpenSSH is the most peer-reviewed security component around.
               5. This makes it auditable. You know what you're automating,
               and bugs have nowhere to hide.
